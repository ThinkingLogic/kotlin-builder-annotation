
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = "sources"
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = "javadoc"
}

publishing {
    publications {
        BuilderAnnotation(MavenPublication) {
            groupId "com.thinkinglogic.builder"
            artifactId "kotlin-builder-annotation"
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = "Kotlin Builder Annotation"
                description = "A replacement for the Lombok @Builder annotation for Kotlin"
                url = "https://github.com/ThinkingLogic/kotlin-builder-annotation"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "yetanothermatt"
                        name = "Matthew Smith"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/ThinkingLogic/kotlin-builder-annotation.git"
                    developerConnection = "scm:git:ssh:git@github.com:ThinkingLogic/kotlin-builder-annotation.git"
                    url = "https://github.com/ThinkingLogic/kotlin-builder-annotation"
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    def signingKey = System.getenv("SONATYPE_GPG_SECRET_KEY")
    def signingPassword = System.getenv("SONATYPE_GPG_PASSPHRASE")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.BuilderAnnotation
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html4", true)
    }
}
